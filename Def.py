'''#Q1....

def pattern1(rows):
    num=1
    for i in range(rows):
        for j in range(3,i+1):
            print(num,end=' ')
            num=num+1
        print()
rows=int(input("Enter the rows = "))
pattern1(rows)


#Q2....

num=1
for i in range(5):
    for j in range(0,i+1):
        print(num,end=' ')
        num=num+1
    print()

#Q3....

def num(a):
    for i in range(a):
        for j in range(0,i+1):
            print("*",end=' ')
        print()
a=int(input("Enter the number of rows = "))
num(a)

#Q4....

def num(a):
    for i in range(a):
        for j in range(0,a-i):
            print("*",end=' ')
        print()
a=int(input("Enter the number of rows = "))
num(a)



#Q3. Find and display the largest number of a list without using the built-in function max(). Your program should ask the user to input values in a list  from a keybord.


#WITHOUT USING max() FUNCTION

numbers = [1, 10, 159, 64, 7, 3, 9]
max_value = numbers[0]

for number in numbers[1:]:    
    if number > max_value:    
     max_value = number
print("The max value element is : "+str(max_value))


#USING max() FUNCTION

numbers=[55,67,23,98]
print("The max value element is : ",max(numbers))

 '''


















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































